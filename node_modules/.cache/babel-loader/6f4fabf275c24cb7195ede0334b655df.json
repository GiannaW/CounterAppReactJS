{"ast":null,"code":"var _jsxFileName = \"/Users/gianna/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: this.props.value\n    };\n\n    this.handleIncrement = product => {\n      console.log(product);\n      console.log(\"Test\", this);\n      this.setState({\n        value: this.state.value + 1\n      });\n    };\n\n    this.doHandleincrement = () => {\n      this.handleIncrement({\n        id: 1\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.formatCount(), \">\"), React.createElement(\"button\", {\n      onClick: () => this.handleIncrement({\n        id: 1\n      }),\n      className: \"btn btn-secondary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Increase\"));\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter; // import React, { Component } from 'react';\n// class Counter extends Component {\n//     state = { \n//        count:0\n//      };\n//      handleIncrement=()=>{\n//          this.setState({count:this.count+1});\n//      }\n//     render() {\n//         //let classes = this.getBadgeClasses();\n//         return <div>\n//             <span  className={this.getBadgeClasses()}>{this.formatCount()}</span>\n//             <button onClick={this.handleIncrement} className=\"btn btn-secondary btn-sm\">Increment</button>\n//            <ul>\n//     {this.state.tags.map(tag=><li key ={tag}>{tag}</li>)}\n//            </ul>\n//             </div>    }\n//     getBadgeClasses() {\n//         let classes = \"badge m-2 badge-\";\n//         classes += (this.state.count === 0) ? \"warning\" : \"primary\";\n//         return classes;\n//     }\n//             formatCount(){\n//                 const {count}=this.state;\n//                 return count === 0 ? 'Zero' : count;\n//             }\n// }\n// export default Counter;","map":{"version":3,"sources":["/Users/gianna/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","value","props","handleIncrement","product","console","log","setState","doHandleincrement","id","render","getBadgeClasses","formatCount","classes","count"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAKA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AAAGC,MAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWD;AAApB,KADoB;;AAAA,SAW5BE,eAX4B,GAWTC,OAAD,IAAY;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB,IAAnB;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,KAAK,EAAC,KAAKD,KAAL,CAAWC,KAAX,GAAiB;AAAxB,OAAd;AACH,KAf2B;;AAAA,SAkB5BO,iBAlB4B,GAkBT,MAAI;AACnB,WAAKL,eAAL,CAAqB;AAACM,QAAAA,EAAE,EAAC;AAAJ,OAArB;AAKH,KAxB2B;AAAA;;AA+B5BC,EAAAA,MAAM,GAAG;AAGL,WAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,WAAL,EAA1C,MADK,EAEL;AAAQ,MAAA,OAAO,EAAG,MAAK,KAAKT,eAAL,CAAqB;AAACM,QAAAA,EAAE,EAAC;AAAJ,OAArB,CAAvB;AAAqD,MAAA,SAAS,EAAC,0BAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFK,CAAT;AASH;;AAILE,EAAAA,eAAe,GAAE;AACb,QAAIE,OAAO,GAAC,kBAAZ;AACAA,IAAAA,OAAO,IAAG,KAAKb,KAAL,CAAWc,KAAX,KAAmB,CAAnB,GAAsB,SAAtB,GAAgC,SAA1C;AACA,WAAOD,OAAP;AACH;;AAEDD,EAAAA,WAAW,GAAE;AAAA,UACFE,KADE,GACK,KAAKd,KADV,CACFc,KADE;AAET,WAAOA,KAAK,KAAI,CAAT,GAAa,MAAb,GAAqBA,KAA5B;AACH;;AAxD+B;;AA4DhC,eAAef,OAAf,C,CA8BA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AAIA;AAEA;AAIA;AAIA;AACA;AACA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAIA;AAMA;AACA","sourcesContent":["import React, { Component } from 'react';\n\n\n\n\nclass Counter extends Component {\n    state = {  value:this.props.value\n    }\n\n\n    // constructor(){\n    //     super();\n       \n    //     this.handleIncrement=this.handleIncrement.bind(this);\n    // }\n\n    handleIncrement = (product) =>{\n        console.log(product);\n        console.log(\"Test\",this)\n        this.setState({value:this.state.value+1})\n    }\n\n\n    doHandleincrement =()=>{\n        this.handleIncrement({id:1});\n\n\n\n\n    };\n\n\n\n\n\n\n    render() { \n\n        \n        return ( <div>\n            <span className={this.getBadgeClasses()}>{this.formatCount()}></span>\n            <button onClick ={()=> this.handleIncrement({id:1})} className='btn btn-secondary btn-sm'>Increase</button>\n\n\n\n\n        </div> \n        );\n    }\n\n\n\ngetBadgeClasses(){\n    let classes=\"badge m-2 badge-\"\n    classes +=this.state.count===0 ?\"warning\":\"primary\";\n    return classes;\n}\n\nformatCount(){\n    const {count}=this.state;\n    return count ===0 ? \"Zero\": count;\n}\n\n}\n \nexport default Counter;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react';\n\n// class Counter extends Component {\n//     state = { \n//        count:0\n       \n\n\n//      };\n//      handleIncrement=()=>{\n//          this.setState({count:this.count+1});\n//      }\n\n\n   \n//     render() {\n        \n//         //let classes = this.getBadgeClasses();\n\n       \n\n//         return <div>\n\n            \n           \n//             <span  className={this.getBadgeClasses()}>{this.formatCount()}</span>\n//             <button onClick={this.handleIncrement} className=\"btn btn-secondary btn-sm\">Increment</button>\n//            <ul>\n//     {this.state.tags.map(tag=><li key ={tag}>{tag}</li>)}\n\n\n//            </ul>\n           \n           \n//             </div>    }\n\n//     getBadgeClasses() {\n//         let classes = \"badge m-2 badge-\";\n//         classes += (this.state.count === 0) ? \"warning\" : \"primary\";\n//         return classes;\n//     }\n\n//             formatCount(){\n\n//                 const {count}=this.state;\n               \n//                 return count === 0 ? 'Zero' : count;\n\n\n\n//             }\n\n\n\n\n\n// }\n// export default Counter;"]},"metadata":{},"sourceType":"module"}