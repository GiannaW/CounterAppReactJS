{"ast":null,"code":"var _jsxFileName = \"/Users/gianna/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 0,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n  }\n\n  renderTags() {\n    if (this.state.tags.length === 0) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"There are no tags!\");\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, tag)));\n  } ///object that includes data code needs\n\n\n  render() {\n    React.createElement('h1'); //let classes = this.getBadgeClasses();\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      className: \"btn btn-secondary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.tags.map(tag => React.createElement(\"li\", {\n      key: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, tag))));\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/gianna/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","renderTags","length","map","tag","render","createElement","getBadgeClasses","formatCount","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAG,CADJ;AAGJC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAQ,MAAR,EAAe,MAAf;AAHF,KADoB;AAAA;;AAU3BC,EAAAA,UAAU,GAAE;AACR,QAAI,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,MAAhB,KAAyB,CAA7B,EAA+B,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AAExC,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,KAAKJ,KAAL,CAAWE,IAAX,CAAgBG,GAAhB,CAAoBC,GAAG,IAAE;AAAI,MAAA,GAAG,EAAGA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBA,GAAhB,CAAzB,CADK,CAAN;AAKM,GAlB0B,CAwB3B;;;AACDC,EAAAA,MAAM,GAAG;AACLV,IAAAA,KAAK,CAACW,aAAN,CAAoB,IAApB,EADK,CAEL;;AAEA,WAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEH;AAAO,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,KAAKC,WAAL,EAA3C,CAFG,EAGH;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHG,EAIJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN,KAAKV,KAAL,CAAWE,IAAX,CAAgBG,GAAhB,CAAoBC,GAAG,IAAE;AAAI,MAAA,GAAG,EAAGA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBA,GAAhB,CAAzB,CADM,CAJI,CAAP;AAW0B;;AAE9BG,EAAAA,eAAe,GAAG;AACd,QAAIE,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKX,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,WAAOU,OAAP;AACH;;AAEOD,EAAAA,WAAW,GAAE;AAAA,UAEFT,KAFE,GAEK,KAAKD,KAFV,CAEFC,KAFE;AAIT,WAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AAIH;;AAxDmB;;AA+DhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = { \n        count:  0,\n\n        tags: [\"tag1\",\"tag2\",\"tag3\"],\n       \n\n\n     };\n\n     renderTags(){\n         if (this.state.tags.length===0)return <p>There are no tags!</p>\n\nreturn<ul>\n{this.state.tags.map(tag=><li key ={tag}>{tag}</li>)}\n</ul>\n         \n\n     }\n     \n     \n     \n     \n     \n     ///object that includes data code needs\n    render() {\n        React.createElement('h1')\n        //let classes = this.getBadgeClasses();\n\n        return <React.Fragment>\n           \n            <span  className={this.getBadgeClasses()}>{this.formatCount()}</span>\n            <button className=\"btn btn-secondary btn-sm\">Increment</button>\n           <ul>\n    {this.state.tags.map(tag=><li key ={tag}>{tag}</li>)}\n\n\n           </ul>\n           \n           \n            </React.Fragment>    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += (this.state.count === 0) ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n            formatCount(){\n\n                const {count}=this.state;\n               \n                return count === 0 ? 'Zero' : count;\n\n\n\n            }\n\n\n\n\n\n}\nexport default Counter;"]},"metadata":{},"sourceType":"module"}