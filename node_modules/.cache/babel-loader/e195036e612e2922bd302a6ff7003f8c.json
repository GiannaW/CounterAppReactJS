{"ast":null,"code":"var _jsxFileName = \"/Users/gianna/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 1\n    };\n  }\n\n  ///object that includes data code needs\n  render() {\n    React.createElement('h1');\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, this.formatCount), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Increment\"));\n  }\n\n  formatCount() {\n    const count = this.state.count;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/gianna/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","render","createElement","formatCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAE;AADH,KADoB;AAAA;;AAKzB;AACHC,EAAAA,MAAM,GAAG;AACLL,IAAAA,KAAK,CAACM,aAAN,CAAoB,IAApB;AAEA,WAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKC,WAAZ,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFG,CAAP;AAG0B;;AAEtBA,EAAAA,WAAW,GAAE;AAAA,UACFH,KADE,GACK,KAAKD,KADV,CACFC,KADE;AAET,WAAOA,KAAK,KAAI,CAAT,GAAa,MAAb,GAAoBA,KAA3B;AAIH;;AApBmB;;AA2BhC,eAAeF,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = { \n        count: 1\n\n\n     };///object that includes data code needs\n    render() {\n        React.createElement('h1')\n\n        return <React.Fragment>\n            <span>{this.formatCount}</span>\n            <button>Increment</button>\n            </React.Fragment>    }\n\n            formatCount(){\n                const {count}=this.state\n                return count=== 0 ? 'Zero':count;\n\n\n\n            }\n\n\n\n\n\n}\nexport default Counter;"]},"metadata":{},"sourceType":"module"}